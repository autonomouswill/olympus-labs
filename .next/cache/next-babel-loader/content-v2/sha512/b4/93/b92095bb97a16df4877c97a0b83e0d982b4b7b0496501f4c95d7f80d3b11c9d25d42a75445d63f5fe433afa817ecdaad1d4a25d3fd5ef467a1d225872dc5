{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aw/olympus-labs/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Admin from \"layouts/Admin.js\";\nexport default function Dashboard() {\n  _s();\n\n  const {\n    0: currentAccount,\n    1: setCurrentAccount\n  } = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"text-lightBlue-500 bg-transparent border border-solid border-lightBlue-500 hover:bg-lightBlue-500 hover:text-white active:bg-lightBlue-600 font-bold uppercase px-8 py-3 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\",\n    type: \"button\",\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\",\n        children: currentAccount === \"\" ? renderNotConnectedContainer() : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: null,\n          className: \"cta-button connect-wallet-button\",\n          children: \"Mint NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboard, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n\n_c = Dashboard;\nDashboard.layout = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/aw/olympus-labs/pages/index.js"],"names":["React","useEffect","useState","Admin","Dashboard","currentAccount","setCurrentAccount","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWallet","alert","error","renderNotConnectedContainer","layout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCJ,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMK,wBAAwB,GAAG,YAAY;AAC3C,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAI,CAACD,QAAL,EAAe;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA;AACH,KAHD,MAGO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,QAA3C;AACH;;AACD,UAAMI,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB;;AACA,QAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACvB,YAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CK,OAA5C;AACAV,MAAAA,iBAAiB,CAACU,OAAD,CAAjB;AACH,KAJD,MAIO;AACHN,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACF,GAhBD;;AAkBA,QAAMM,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAM;AAAET,QAAAA;AAAF,UAAeC,MAArB;;AACA,UAAI,CAACD,QAAL,EAAe;AACbU,QAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AACD,YAAMN,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,CAAvB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,QAAQ,CAAC,CAAD,CAAjC;AACAN,MAAAA,iBAAiB,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACD,KATD,CASE,OAAOO,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACF,GAbD;;AAeA,QAAMC,2BAA2B,GAAG,mBAClC;AAAQ,IAAA,OAAO,EAAEH,aAAjB;AAAgC,IAAA,SAAS,EAAC,oQAA1C;AAA+S,IAAA,IAAI,EAAC,QAApT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,wBAAwB;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,kBACCF,cAAc,KAAK,EAAnB,GACGe,2BAA2B,EAD9B,gBAGG;AAAQ,UAAA,OAAO,EAAE,IAAjB;AAAuB,UAAA,SAAS,EAAC,kCAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;GA7DuBhB,S;;KAAAA,S;AA+DxBA,SAAS,CAACiB,MAAV,GAAmBlB,KAAnB","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Admin from \"layouts/Admin.js\";\n\nexport default function Dashboard() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n    if (!ethereum) {\n        console.log(\"Make sure you have metamask!\");\n        return;\n    } else {\n        console.log(\"We have the ethereum object\", ethereum);\n    }\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n    if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"Found an authorized account:\", account);\n        setCurrentAccount(account)\n    } else {\n        console.log(\"No authorized account found\")\n    }\n  }\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]); \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const renderNotConnectedContainer = () => (\n    <button onClick={connectWallet} className=\"text-lightBlue-500 bg-transparent border border-solid border-lightBlue-500 hover:bg-lightBlue-500 hover:text-white active:bg-lightBlue-600 font-bold uppercase px-8 py-3 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\">\n      Connect to Wallet\n    </button>\n  );\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, [])\n\n  return (\n    <>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\n        {currentAccount === \"\" ? (\n            renderNotConnectedContainer()\n          ) : (\n            <button onClick={null} className=\"cta-button connect-wallet-button\">\n              Mint NFT\n            </button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nDashboard.layout = Admin;"]},"metadata":{},"sourceType":"module"}